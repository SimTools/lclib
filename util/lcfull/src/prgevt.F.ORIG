CC*********************************************************************C
C*                                                                     *
C*-------------------======                                            *
C* Subroutine PRGEVT(NRET)                                             *
C*-------------------======                                            *
C*                                                                     *
C*(Purpose)                                                            *
C*    TBREAD data                                                      *
C*(Input)                                                              *
C*   NRET = -9998 
C*    Close and dis-mount tape, if any is open.
C*                                                                     *
C*(Output)                                                             *
C*   IRET   : Return flag.                                             *
C*        > 0   TBREAD suceed.  IRET = Record ID.                      *
C*        = -1  TBREAD error.                                          *
C*        = -2  TBINIT error.                                          *
C*        =-1000 Read End_of_File of input file.                       *
C*        =-1001 Complete event Generation.                            *
C*                                                                     *
C*(Relation)                                                           *
C*    Called by PRCEVT.                                                *
C*                                                                     *
C*(Author)                                                             *
C*    A. Miyamoto   27-Apr-1987   Original version.                    *
C*                  29-Sep-1987   Add dynamic allocation option.       *
C*                  24-AUG-1988   Support many types of files for DYNA *
C*                   5-Nov-1988   According to NRET change in UCMTAL   *
C*                   8-Sep-1989   To FULLnize simulator.               *
C*                  19-Apr-1995   UNIX version
C*                                                                     *
CC**********************************************************************
 
      SUBROUTINE PRGEVT( NRET )
 
#include "prfctl.inc"
#include "prgenf.inc"
#include "prdyna.inc"
#include "prjctl.inc"
#ifdef  UNIX
#include "tbsfmt.inc"
CCC=EXPAND 'T#SM.TBS.FORT/TBSFMT.inc'
#endif
C
 
#ifdef  UNIX
      EXTERNAL TBVOPN
      EXTERNAL MTLINT
      EXTERNAL MTLATR
      EXTERNAL MTLALC
      EXTERNAL MTLFRE
      EXTERNAL MTLOPN
      EXTERNAL MTLCLS
      EXTERNAL MTLRED
      EXTERNAL MTLWRT
      EXTERNAL MTLCTL
      EXTERNAL MTLEND
      CHARACTER*8       JOBNAME
      CHARACTER*160     OPER, WRK
C      CHARACTER*1       ACT(9),NULL
      CHARACTER*9       ACTION
      INTEGER*4  NOPNFL
      DATA       NOPNFL/0/
      SAVE       NOPNFL
C      CHARACTER*8 HSNAME, FDDINM
C      SAVE        HSNAME, FDDINM
      CHARACTER*8  FDDINM
      SAVE FDDINM
#ifndef HIUXF77
C
C for TBSDS
C
#include "tbsds_definitions.inc"
      record/tbsds_rec_command/ cmd
      integer toserver/10000/, fromserver/10001/
      character*256 str
      structure /prtbsds/
	integer     npos
        character*6 vol
        character*24 fname
        character*8 hostname
      end structure
      record /prtbsds/ dsnow, dsold  
      integer*4 nreadev/0/
      save nreadev
      integer system, isys
      integer normalend
      data normalend/0/
#endif
#endif
      DATA  NODFIL/ 0 /
      CHARACTER*1 NULL/X'00'/
 
C===========================<< Entry point >>==========================
#ifdef UNIX
      IF( NRET .EQ. -9998 ) GO TO 2000
#endif
C
C ---------------------------------------------------------------------
C (1) Allocate input file, if NOWPNT .LE. 0, though NDYNAT >= 0
C ---------------------------------------------------------------------
C
      IF( NDYNAT .LE. -1 ) GO TO 200
C
      IF( NOWPNT .EQ. 0 ) THEN
        NOWPNT = 1
        IF( NOWPNT .GT. NUMDYN ) GO TO 900
        NOWEXP = NRNDYN(1, NOWPNT)
        NOWRUN = NRNDYN(2, NOWPNT)
        NXTFIL = 1
        GO TO 500
      ENDIF
C
C ---------------------------------------------------------------------
C (2) TBREAD data, or TBINIT
C ---------------------------------------------------------------------
C
200   CONTINUE
CXX       PRINT *,' PRGEVT CALLED WITH NUMGEN =', NUMGEN
      IF( NUMGEN .LE. 0 ) THEN
#if defined(UNIX) && !defined(HIUXF77)
	if( nrwfmt(1).eq.23.and.nread .le. 0 ) then
          nread =  NEVMAX - nreadev
          cmd.id = ID_send_tbsfile
          cmd.length = 3
          cmd.tbsfile_numrecord = nread
          call tbsds_send(5, cmd, nret )      
          GO TO 200
        endif
#endif	
        CALL TBREAD( NINUNI, NRET )
#ifdef UNIX && !defined(HIUXF77)
	if( nrwfmt(1).eq.23 ) then
  	  if( nret.eq.1 ) nreadev = nreadev + 1
	  nread = nread - 1
        endif
#endif
        IF( NRET .NE. -1000 ) RETURN
C
C ... For Event generation mode. ( 8-Sep-1989 )
C
      ELSE
        IUMGEN = IUMGEN + 1
        IF( IUMGEN .GT. NUMGEN + 2 ) THEN
            NRET = -1001
            RETURN
        ENDIF
        NRET   = 1
        IF( IUMGEN .EQ. 1 )          NRET = 2
        IF( IUMGEN .EQ. NUMGEN + 2 ) NRET = 8
        CALL TBINIT( NRET, IRET )
CXX         PRINT *,' TBINIT CALLED WITH NRET=',NRET,'  IRET=',IRET
CXX         PRINT *,' IUMGEN =', IUMGEN
        IF( IRET .LT. 0 )            NRET = -2
        RETURN
      ENDIF
C
C ---------------------------------------------------------------------
C (3) Just read next file, in case of static allocation.
C ---------------------------------------------------------------------
C
      IF( NDYNAT .LE. -1 ) THEN
        IINFIL = IINFIL + 1
        IF( IINFIL .LE. NINFIL ) GO TO 200
        GO TO 900
      ENDIF
C
C ************************************************************** *
C .. Close and Free RMTL job.
C ************************************************************** *
#ifdef  UNIX
      IF( NRWFMT(1).EQ.2 ) THEN
        IUNIT = 10
        CALL MTLCLS( IUNIT, IRC )
        IF( IRC .NE. 0 ) THEN
          PRINT *,'In PRGEVT .. MTLCLS IRC=',IRC
          STOP
        ENDIF
      ENDIF
C .. Dismount tape, if requested in case of SONY tape.
C  (No dismount for while)
      IF( NRWFMT(1).EQ.3 ) THEN
         CALL TBTCLS(KRET)
         IF( NFINFO(4,NOWPNT).EQ.1 ) THEN
      CALL TBTDSM(FILVOL(NOWPNT)(1:LNBLNK(FILVOL(NOWPNT)))//NULL,
     .KRET)
         ENDIF
      ENDIF
#endif
 
C
C ---------------------------------------------------------------------
C (4) Get next run # from the stack.
C ---------------------------------------------------------------------
C
400   CONTINUE
      IF( NXTFIL .GT. 0 ) GO TO 500
      NXTFIL = 1
      NOWRUN = NOWRUN + 1
      IF( NOWRUN .GT. NRNDYN(3, NOWPNT)) THEN
        NOWPNT = NOWPNT + 1
        IF( NOWPNT .GT. NUMDYN ) THEN
#ifdef  MSP
          IF( NODFIL .GT. 0 ) CALL UCTLFR( NINUNI )
#endif
C#ifdef  UNIX
C         IF( NODFIL .GT. 0 ) THEN
C           STOP
C         ENDIF
C#endif
          GO TO 900
        ENDIF
        NOWEXP = NRNDYN(1, NOWPNT )
        NOWRUN = NRNDYN(2, NOWPNT )
      ENDIF
C
C ---------------------------------------------------------------------
C (5) Dynamically allocate new file.
C ---------------------------------------------------------------------
C
500   CONTINUE
C      PRINT *,' PRGEVT.. NDYNAT=',NDYNAT,' TYPE=',TYPE(NDYNAT),
C     >        ' NOWEXP=', NOWEXP, 'NOWRUN=',NOWRUN,' NXTFIL=', NXTFIL
C	print *,' Pass 500...NOWEXP =',NOWEXP
      IF( NOWEXP .EQ. 0 ) THEN
#ifdef  MSP
     CALL UALCPS(NINUNI, FILDYN(NOWPNT), 'SHRR', 'VBSS', 0, IRET )
#endif
#ifdef  UNIX
        IF(NFINFO(1,NOWPNT).EQ.0 ) THEN
           OPEN(NINUNI,FILE=FILDYN(NOWPNT),
     >     FORM='UNFORMATTED',IOSTAT=IRET)
          NRWFMT(1) = 0

        ELSEIF(NFINFO(1,NOWPNT).EQ.4 ) THEN
           OPEN(NINUNI,FILE=FILDYN(NOWPNT),
     >     FORM='UNFORMATTED',IOSTAT=IRET)
          NRWFMT(1) = 4
C
C ==================================================
C Open VBS format tape.
C ==================================================
C
        ELSEIF( NFINFO(1,NOWPNT).EQ.1 ) THEN
          NOPNFL= NOPNFL + 1
          IF( NOPNFL .EQ. 1 ) CALL TBUXIN(3,0)
          NRWFMT(1) = 1
      CALL TBVOPN(FILDYN(NOWPNT)(1:LNBLNK(FILDYN(NOWPNT)))//NULL)


C
C =============================================================
C .. Open FACOM MSP file through RMTL utility.
C =============================================================
        ELSEIF( NFINFO(1,NOWPNT).EQ.2 ) THEN
C
C ***********************************************************
C If this is a first file, submit job and etsbalish connection
C ***********************************************************
          IF( NOPNFL.EQ.0 ) THEN
            FDDINM = 'kektrb'
            IF( FDDINM(1:3).NE.'kek') THEN
       PRINT *,'In PRGEVT .. Unable to get proper FDDI Host name'
          PRINT *,'FDDINM =',FDDINM
              STOP
            ENDIF
            ITIME=60
            CALL MTLINT( FDDINM, ITIME, JOBNAME, IRC )
            IF( IRC .NE. 0 ) THEN
              PRINT *,'In PRGEVT..Error in MTLINT ... NRET =',IRC
              STOP
            ENDIF
C
C ************************************************************** *
C     CALL MTLATR
C ************************************************************** *
C
            IRC =0
            IRC1=0
            IRC2=0
            IF( FILDYN(NOWPNT)(2:4).EQ.'TMT') THEN
             OPER='IN INPUT LRECL(32756) BLKSIZE(32760) '//
     >       'RECFM(V,B,S) BUFNO(20) OPTCD(C)'//NULL
            ELSE
             OPER='IN INPUT LRECL(23472) BLKSIZE(23476) '//
     >       'RECFM(V,B,S) BUFNO(20) OPTCD(C)'//NULL
            ENDIF
            CALL MTLATR( OPER//NULL ,IRC,IRC1,IRC2 )
            IF (IRC.NE.0) THEN
              WRITE(6,*) 'Attribute.'
              WRITE(6,*) 'IPFCMD RC1=',IRC1,' IRC2=',IRC2
              STOP
            END IF
          ENDIF
C ************************************************************** *
C     CALL MTLALC
C ************************************************************** *
          IUNIT = 10
          LWRK  = LNBLNK(FILDYN(NOWPNT))
          LNULL = INDEX(FILDYN(NOWPNT)(1:LWRK),NULL)
          IF( LWRK.EQ. LNULL ) LWRK = LWRK- 1
          WRK = FILDYN(NOWPNT)(1:LWRK)
          WRITE(OPER,210) WRK(:LWRK)
 210      FORMAT(' DS(',A,') SHR REUSE USING(IN)   ')
          CALL MTLALC( IUNIT,OPER//NULL,IRC,IRC1,IRC2 )
          IF (IRC.NE.0) THEN
            WRITE(6,*) 'In PRGEVT .. MTLALC error.'
            WRITE(6,*) 'IPFCMD IRC1=',IRC1,' IRC2=',IRC2
          END IF
C ************************************************************** *
C     CALL MTLOPN
C ************************************************************** *
          IUNIT=10
          ACTION = 'READ'//NULL
          CALL MTLOPN( IUNIT, ACTION, IRC )
C
          IF(IRC.NE.0 ) THEN
            PRINT *,'In PRGEVT .. Unable to open file ',
     >      FILDYN(NOWPNT)(1:LNBLNK(FILDYN(NOWPNT)))
            PRINT *,'KRET =',KRET
            STOP
          ENDIF
C     Open a file
          NOPNFL= NOPNFL + 1
          IF( NOPNFL .EQ. 1 ) CALL TBUXIN(3,0)
          NRWFMT(1) = 2
 
C
C******************************************************************
C******************************************************************
C .. Open SONY DIR1000L Format tape
C******************************************************************
C******************************************************************
        ELSEIF( NFINFO(1,NOWPNT).EQ.3 ) THEN
C     Mount a tape.
          IF( NFINFO(3,NOWPNT).EQ.1 ) THEN
      CALL TBTMNT(FILVOL(NOWPNT)(1:LNBLNK(FILVOL(NOWPNT)))//NULL,
     >           FILDEV(NOWPNT)(1:LNBLNK(FILDEV(NOWPNT)))//NULL,
     >            'READ'//NULL, KRET)
            IF(KRET.NE.0 ) THEN
       PRINT *,'Error in PRGEVT .. TBTMNT NRET=',KRET
       PRINT *,'Device=',FILDEV(NOWPNT)(1:LNBLNK(FILDEV(NOWPNT)))
       PRINT *,'Volser=',FILVOL(NOWPNT)(1:LNBLNK(FILVOL(NOWPNT)))
            ENDIF
          ENDIF
C     Open a file
CCUNIX                PRINT *,' PRGEVT ... NOWPNT +',NOWPNT
      CALL TBTOPN(FILDYN(NOWPNT)(1:LNBLNK(FILDYN(NOWPNT)))//NULL,
     >                 NFINFO(2,NOWPNT), 'READ'//NULL)
          NOPNFL= NOPNFL + 1
          IF( NOPNFL .EQ. 1 ) CALL TBUXIN(3,0)
          NRWFMT(1) = 3

	
        ELSE
            PRINT *,'In PRGEVT .. File type ',NFINFO(1,NOWPNT),
     >        ' is not supported yet.'
        ENDIF


#endif
 
 
        IF( IRET .LT. 0 ) THEN
          WRITE(6,520) FILDYN(NOWPNT)
        ELSE
          NXTFIL = 0
          GO TO 200
        ENDIF
C
C******************************************************************
C******************************************************************
C -----------------------------------------------------------
C   File allocation of TOPAS Standard strip file.
C -----------------------------------------------------------
C******************************************************************
C******************************************************************
C
      ELSE
#ifdef  MSP
      CALL UCMTAL( NINUNI, TYPDYN(NOWPNT), NOWEXP, NOWRUN, NXTFIL,
     .             OPTDYN, IRET )
        NODFIL = NODFIL + 1
C
        IF( IRET .LE. -999 ) THEN
           WRITE(6,510)NOWEXP, NOWRUN, NXTFIL
           STOP
        ELSEIF( IRET .LE. -1 ) THEN
           NXTFIL = 0
           GO TO 400
        ELSEIF( IRET .EQ. 0 ) THEN
           NXTFIL = 0
        ELSE
           NXTFIL = NXTFIL + 1
        ENDIF
        GO TO 200
      ENDIF
510   FORMAT(//,
     >' ************************************************************',/,
     >' *   Job will terminate due to input file allocation time   *',/,
     >' *   out.                                                   *',/,
     >' *       Exp# ',I6,'                                        *',/,
     >' *       Run# ',I6,'                                        *',/,
     >' *       File#',I6,'                                        *',/,
     >' ************************************************************',/,
     >   //)
#endif
520   FORMAT(//,
     >' ************************************************************',/,
     >' *   Job will terminate due to the error to allocate file.  *',/,
     >' *   File name is =',A,/,
     >' ************************************************************',/,
     >   //)

#if defined(UNIX) && !defined(HIUXF77)
C .. Access SONY tape through Net work.
      ifirst = 1
      if( NOWPNT.eq.1 .and. NOWRUN.eq.NRNDYN(2,NOWPNT)) ifirst=0


      call prgtif(TYPDYN(NOWPNT), NOWEXP, NOWRUN, 
     >     dsnow.vol, dsnow.npos, dsnow.fname, dsnow.hostname)
      if( dsnow.npos .lt. 0 ) then
	print *,TYPDYN(NOWPNT),' for Exp#',NOWEXP,' File#=',
     >  NOWRUN,' is not available.'
	stop
      endif

      print *,'Next file is ',TYPDYN(NOWPNT),' Exp#',NOWEXP,
     > ' File #=',NOWRUN
      print *,'Volume ',dsnow.vol,' pos=',dsnow.npos,
     > ' fname =',dsnow.fname,' ifirst=',ifirst
c
c
      if( ifirst.ne.0 .and. dsnow.hostname.ne.dsold.hostname ) then
	print *,'Required to run tbs data server on different host.'
	print *,' Current host =',dsold.hostname
	print *,' New host     =',dsnow.hostname
	print *,' Host switch does not supported yet.'
	go to 800
      endif	
C
C .. start client
C .. assumes that TBS data server is running on a proper host,
C .. and appropriate tape is mounted to the device.
C
      if( ifirst.eq.0 ) then
c
c --- Mount tape
c
        str='dir_mount '//dsnow.vol
        print *,'Start mount ',dsnow.vol,' to the remote host.'
        isys = system(str)
        if( isys.ne.0 ) then
          print *,'Fatal error to mount tape ',dsnow.vol
          stop
        endif
        normalend=1

        str='tbsds_start '//dsnow.hostname
        isys=system(str)
        if( isys.ne. 0 ) then
          print *,'Unable to start TBS Data Sever at ',dsnow.hostname
          print *,'Please dismount tape by yourself by a command ',
     >            ' dir_dismount ',dsnow.vol
          stop
        endif
        normalend=2

	lnhost = lnblnk(dsnow.hostname)
        call tbsds_init_client(dsnow.hostname(:lnhost),
     >  toserver, fromserver, iret )
        if( iret .eq. -1 ) then
	  print *,'Unable to setup socket for client.'
          print *,'For connection to ',dsnow.hostname(:lnhost)
	  print *,' iret =',iret
	  stop
        endif
	dsold.hostname=dsnow.hostname
        dsold.vol = dsnow.vol
	dsold.fname = dsnow.fname
	dsold.npos = dsnow.npos
	print *,'TBS Data server has started on ',dsnow.hostname
c
c Mount tape to the drive ( Read tape header and check.)
c      
        nrwfmt(1) = 23
        cmd.id=ID_mount_tape
        cmd.length=128
        cmd.nret = 0
        cmd.tapename=dsnow.vol
        call tbsds_send(128,cmd,nret)
        isys=system("sleep 1")
        call tbsds_receive(128, nw, cmd)      
        print *,'cmd.nret for mount tape is',cmd.nret
        if( cmd.nret .ne. 0 ) go to 800
        isys=system("sleep 3")

        normalend=1
      endif
c
c   Open tape file.
c
      cmd.id=ID_open_tapefile
      cmd.length=128
      cmd.filename=dsnow.fname
      cmd.lpos=dsnow.npos
      call tbsds_send(128, cmd, nret)
      call tbsds_receive(128, nw, cmd)      
      print *,'cmd.nret for open tape file is',cmd.nret
      if( cmd.nret .ne. 0 ) go to 800
      NXTFIL = 0
      NODFIL = NODFIL + 1
c
c   Initiate data transfer
c
880   continue
      nread =  NEVMAX - nreadev
      cmd.id = ID_send_tbsfile
      cmd.length = 3
      cmd.tbsfile_numrecord = nread
      call tbsds_send(5, cmd, nret )      
C
C
C        IF( IRET .LE. -1 ) THEN
C           NXTFIL = 0
C           GO TO 400
C        ELSEIF( IRET .EQ. 0 ) THEN
C           NXTFIL = 0
C        ELSE
C           NXTFIL = NXTFIL + 1
C        ENDIF
        GO TO 200
	
#endif
      ENDIF
C
C ---------------------------------------------------------------------
C (9) Return to caller as end of input file.
C ---------------------------------------------------------------------
C
900   CONTINUE
C
      NRET = -1000
	print *,'Reach end-of-file of input file.'
#ifdef  UNIX
      IF( NRWFMT(1).EQ.2 ) THEN
C ************************************************************** *
C     CALL MTLEND
C ************************************************************** *
        CALL MTLEND( IRC )
        WRITE(6,*) 'MTLEND return code =',IRC

#ifndef HIUXF77
C
C ************************************************************** *
C (a) Access through TBS Data server.
C     Dismount tape, and quit data server.
C ************************************************************** *
C
      elseif( nrwfmt(1).eq.23 ) then
        cmd.id=ID_dismount_tape
        cmd.length=128
        cmd.nret = 0
        cmd.tapename=dsnow.vol
        call tbsds_send(128,cmd,kret)
        isys=system("sleep 1")
        call tbsds_receive(128, nw, cmd)      
c        print *,'cmd.nret for tape dismount.=',cmd.nret
c        print *,'logfile =',cmd.command(:lnblnk(cmd.command(1:64)))
c
c  Quit communication.
c
        cmd.id=id_quit_server
        cmd.length=3
        call tbsds_send(3, cmd, kret)
        isys=system("sleep 1")
      
        call tbsds_end
  	print *,'TBS Data server, server program was terminated.'    
        normalend=1
        str='dir_dismount '//dsnow.vol
        isys=system(str)
        if( isys.ne.0) then
          print *,'Error detected to dismount tape ',dsnow.vol
          print *,'Please dismount tape manually.'
        endif
        normalend=0
#endif

      ENDIF
#endif


      RETURN

#ifdef UNIX
800     continue
#ifndef HIUXF77
        if( normalend.ge.2 ) then
        cmd.id=id_quit_server
        cmd.length=3
        call tbsds_send(3, cmd, kret)
        isys=system("sleep 1")
        call tbsds_end
	print *,'TBS data server was stopped.'
        normalend=1
        endif

        if( normalend.ge.1 ) then
        str='dir_dismount '//dsnow.vol
        isys=system(str)
        if( isys.ne.0) then
          print *,'Error detected to dismount tape ',dsnow.vol
          print *,'Please dismount tape manually.'
        endif
        normalend=0
        endif
#endif

        NRET = -1000
        RETURN
C
C .. Emergency stop.
C
2000    CONTINUE
#ifndef HIUXF77
        IF( nrwfmt(1).eq.23 .and. normalend.ne.0 ) go to 800
#endif
        return
#endif      

      END


